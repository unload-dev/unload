// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Registry {
  id             String              @id @default(cuid())
  name           String
  namespace      String?
  url            String
  skipTlsVerify  Boolean             @default(false)
  type           RegistryType        @relation(fields: [registryTypeId], references: [id])
  registryTypeId String
  credentials    RegistryCredentials @relation(fields: [credentialsId], references: [id])
  credentialsId  String              @unique
  user           User                @relation(fields: [userId], references: [id])
  userId         String

  @@unique([name, userId])
  @@index([registryTypeId]) // https://github.com/prisma/prisma/issues/10611
  @@index([userId]) // https://github.com/prisma/prisma/issues/10611
}

model RegistryCredentials {
  id       String    @id @default(cuid())
  username String?
  password String?
  token    String?
  Registry Registry?
}

model RegistryType {
  id   String @id @default(cuid())
  name String @unique

  Registry Registry[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId]) // https://github.com/prisma/prisma/issues/10611
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId]) // https://github.com/prisma/prisma/issues/10611
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  registries    Registry[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
